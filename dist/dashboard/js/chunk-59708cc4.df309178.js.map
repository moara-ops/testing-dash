{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.math.sign.js","webpack:///../../../src/components/VForm/VForm.ts","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts"],"names":["$","sign","target","stat","name","provide","form","this","inheritAttrs","props","disabled","lazyValidation","readonly","value","Boolean","data","inputs","watchers","errorBag","watch","handler","errors","Object","deep","immediate","methods","watchInput","watcher","input","val","_uid","valid","shouldValidate","validate","filter","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","find","i","unwatch","render","h","staticClass","attrs","novalidate","attrs$","on","submit","e","$slots","bias","c","x","Math","clientWidth","selectedElement","offsetLeft","rtl","widths","currentScrollOffset","totalWidth","itemOffset","additionalOffset","offsetCentered","BaseSlideGroup","directives","Resize","Touch","activeClass","type","default","centerActive","nextIcon","prevIcon","showArrows","validator","v","internalItemsLength","isOverflowing","resizeTimeout","startX","isSwipingHorizontal","isSwiping","scrollOffset","content","wrapper","computed","canTouch","window","__cachedNext","genTransition","__cachedPrev","classes","hasAffixes","isMobile","hasNext","hasPrev","internalValue","scroll","beforeUpdate","$children","updated","onScroll","onFocusin","vm","calculateUpdatedOffset","$vuetify","genNext","slot","$scopedSlots","next","$createElement","class","click","key","genContent","ref","focusin","genData","onResize","genIcon","icon","location","upperLocation","hasAffix","genPrev","prev","genWrapper","start","move","end","calculateNewOffset","newAbosluteOffset","direction","onAffixClick","onTouchStart","onTouchMove","diffX","diffY","document","onTouchEnd","maxScrollOffset","overflowCheck","fn","scrollIntoView","items","lastItemPosition","length","wrapperPosition","$refs","selectedIndex","calculateCenteredOffset","selectedItem","scrollTo","setWidths","slideGroup","defaultMenuProps","offsetY","offsetOverflow","transition","allowOverflow","autoSelectFirst","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","String","lazySearch","computedItems","selectedValues","selectedItems","map","item","hasDisplayedItems","hideSelected","filteredItems","some","currentRange","getText","internalSearch","allItems","text","get","set","isAnyValueAllowed","isDirty","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","listData","isFocused","isMenuActive","oldVal","activateMenu","created","destroyed","onFilteredItemsChanged","preSelectedItem","menu","onInternalSearchChanged","updateMenuDimensions","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","clearableCallback","genInput","autocomplete","domProps","genInputSlot","genSelections","hasSlot","onClick","isAppendInner","onInput","onKeyDown","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText","event"],"mappings":"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","file":"dashboard/js/chunk-59708cc4.df309178.js","sourcesContent":["var $ = require('../internals/export');\nvar sign = require('../internals/math-sign');\n\n// `Math.sign` method\n// https://tc39.es/ecma262/#sec-math.sign\n$({ target: 'Math', stat: true }, {\n  sign: sign\n});\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { composedPath } from '../../util/helpers'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nfunction bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset (\n  selectedElement: HTMLElement,\n  widths: Widths,\n  rtl: boolean,\n  currentScrollOffset: number\n): number {\n  const clientWidth = selectedElement.clientWidth\n  const offsetLeft = rtl\n    ? (widths.content - selectedElement.offsetLeft - clientWidth)\n    : selectedElement.offsetLeft\n\n  if (rtl) {\n    currentScrollOffset = -currentScrollOffset\n  }\n\n  const totalWidth = widths.wrapper + currentScrollOffset\n  const itemOffset = clientWidth + offsetLeft\n  const additionalOffset = clientWidth * 0.4\n\n  if (offsetLeft <= currentScrollOffset) {\n    currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n  } else if (totalWidth <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n  }\n\n  return rtl ? -currentScrollOffset : currentScrollOffset\n}\n\nexport function calculateCenteredOffset (\n  selectedElement: HTMLElement,\n  widths: Widths,\n  rtl: boolean\n): number {\n  const { offsetLeft, clientWidth } = selectedElement\n\n  if (rtl) {\n    const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n    return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n  } else {\n    const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n    return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    isSwipingHorizontal: false,\n    isSwiping: false,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    canTouch (): boolean {\n      return typeof window !== 'undefined'\n    },\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing || Math.abs(this.scrollOffset) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      const scroll =\n        val <= 0\n          ? bias(-val)\n          : val > this.widths.content - this.widths.wrapper\n            ? -(this.widths.content - this.widths.wrapper) + bias(this.widths.content - this.widths.wrapper - val)\n            : -val\n\n      this.$refs.content.style.transform = `translateX(${scroll}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    onScroll () {\n      this.$refs.wrapper.scrollLeft = 0\n    },\n    onFocusin (e: FocusEvent) {\n      if (!this.isOverflowing) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of composedPath(e)) {\n        for (const vm of this.items) {\n          if (vm.$el === el) {\n            this.scrollOffset = calculateUpdatedOffset(\n              vm.$el as HTMLElement,\n              this.widths,\n              this.$vuetify.rtl,\n              this.scrollOffset\n            )\n            return\n          }\n        }\n      }\n    },\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n        on: {\n          focusin: this.onFocusin,\n        },\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n        on: {\n          scroll: this.onScroll,\n        },\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      if (!this.canTouch) return\n\n      if (!this.isSwiping) {\n        // only calculate disableSwipeHorizontal during the first onTouchMove invoke\n        // in order to ensure disableSwipeHorizontal value is consistent between onTouchStart and onTouchEnd\n        const diffX = e.touchmoveX - e.touchstartX\n        const diffY = e.touchmoveY - e.touchstartY\n        this.isSwipingHorizontal = Math.abs(diffX) > Math.abs(diffY)\n        this.isSwiping = true\n      }\n\n      if (this.isSwipingHorizontal) {\n        // sliding horizontally\n        this.scrollOffset = this.startX - e.touchmoveX\n        // temporarily disable window vertical scrolling\n        document.documentElement.style.overflowY = 'hidden'\n      }\n    },\n    onTouchEnd () {\n      if (!this.canTouch) return\n\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n\n      this.isSwiping = false\n      // rollback whole page scrolling to default\n      document.documentElement.style.removeProperty('overflow-y')\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem && this.items.length) {\n        const lastItemPosition = this.items[this.items.length - 1].$el.getBoundingClientRect()\n        const wrapperPosition = this.$refs.wrapper.getBoundingClientRect()\n\n        if (\n          (this.$vuetify.rtl && wrapperPosition.right < lastItemPosition.right) ||\n          (!this.$vuetify.rtl && wrapperPosition.left > lastItemPosition.left)\n        ) {\n          this.scrollTo('prev')\n        }\n      }\n\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        // https://github.com/vuetifyjs/vuetify/issues/13212\n        // We add +1 to the wrappers width to prevent an issue where the `clientWidth`\n        // gets calculated wrongly by the browser if using a different zoom-level.\n        this.isOverflowing = this.widths.wrapper + 1 < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      if (!this.autoSelectFirst) {\n        const preSelectedItem = oldVal[this.$refs.menu.listIndex]\n\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(i => i === preSelectedItem))\n        } else {\n          this.setMenuIndex(-1)\n        }\n        this.$emit('update:list-index', this.$refs.menu.listIndex)\n      }\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n\n        if (this.autoSelectFirst && val.length) {\n          this.setMenuIndex(0)\n          this.$emit('update:list-index', this.$refs.menu.listIndex)\n        }\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      if (!this.multiple && value === '') this.deleteCurrentItem()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n"],"sourceRoot":""}